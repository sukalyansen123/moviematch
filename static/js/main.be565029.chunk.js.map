{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","value","recoms","posters","handleChange","bind","handleSubmit","event","this","setState","target","e","data","require","recos","console","log","preventDefault","arr","map","reco","fetch","then","response","json","push","onSubmit","type","onChange","onClick","renderList","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gxojLAkEeA,G,wDA9Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,GACRC,QAAQ,IAGV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,yDAYNE,GACXC,KAAKC,SAAS,CAACR,MAAOM,EAAMG,OAAOT,U,mCAGxBU,GACX,IAAIC,EAAOC,EAAQ,IACfC,EAAQF,EAAKJ,KAAKR,MAAMC,OAAO,GAAvB,MACZc,QAAQC,IAAIR,KAAKR,MAAMC,OACvBc,QAAQC,IAAIJ,EAAKJ,KAAKR,MAAMC,OAAO,IACnCc,QAAQC,IAAIF,GACZN,KAAKC,SAAS,CAACP,OAAQY,IACvBC,QAAQC,IAAIR,KAAKR,MAAME,QACvBS,EAAEM,mB,mCAIFF,QAAQC,IAAI,cACZ,IAAIF,EAAQN,KAAKR,MAAME,OACvBa,QAAQC,IAAIF,GACZ,IAAII,EAAM,GACVJ,EAAMK,KAAI,SAACC,GAEPC,MADU,6BAA+BD,EAAM,oBAE9CE,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAV,GACJG,QAAQC,IAAIJ,GACZM,EAAIO,KAAKb,EAAI,cAInBJ,KAAKC,SAAS,CAACN,QAAQe,IACvBH,QAAQC,IAAIR,KAAKR,MAAMG,W,+BAIvB,OACE,gCACE,uBAAMuB,SAAUlB,KAAKF,aAArB,UACA,0CAEE,uBAAOqB,KAAK,OAAO1B,MAAOO,KAAKR,MAAMC,MAAO2B,SAAUpB,KAAKJ,kBAE7D,uBAAOuB,KAAK,SAAS1B,MAAM,SAAS4B,QAAWrB,KAAKF,aAAaD,KAAKG,WAExEA,KAAKsB,oB,GAzDOC,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be565029.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      recoms: [],\n      posters:[],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(e) {\n    var data = require('./movie.json');\n    var recos = data[this.state.value][0]['recos'];\n    console.log(this.state.value);\n    console.log(data[this.state.value][0]);\n    console.log(recos);\n    this.setState({recoms: recos});  \n    console.log(this.state.recoms);\n    e.preventDefault();  \n  }\n\n  renderList(){\n    console.log(\"RenderList\")\n    var recos = this.state.recoms;\n    console.log(recos);\n    var arr = [];\n    recos.map((reco) => {\n        var url = 'http://www.omdbapi.com/?t=' + reco +'&apikey=2afc6891';\n        fetch(url)\n        .then(response =>response.json())\n        .then(data => {\n          console.log(data);\n          arr.push(data['Poster']);\n        })\n    });\n\n    this.setState({posters:arr});\n    console.log(this.state.posters);\n  }\n\n  render() {\n    return (\n      <div>      \n        <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" onClick = {this.handleSubmit.bind(this)}/>\n      </form>\n     {this.renderList()}\n</div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}