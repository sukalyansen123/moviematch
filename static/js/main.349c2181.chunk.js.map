{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","value","recoms","handleChange","bind","handleSubmit","event","this","setState","target","e","recos","require","preventDefault","map","reco","onSubmit","type","onChange","onClick","renderList","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gxojLAwDeA,G,wDApDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAIV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,yDAYNE,GACXC,KAAKC,SAAS,CAACP,MAAOK,EAAMG,OAAOR,U,mCAGxBS,GACX,IACIC,EADOC,EAAQ,IACFL,KAAKP,MAAMC,OAAO,GAAvB,MACZM,KAAKC,SAAS,CAACN,OAAQS,IACvBD,EAAEG,mB,mCAIUN,KAAKP,MAAME,OAEfY,KAAI,SAACC,GACT,OACA,6BAAKA,S,+BAOT,OACE,yCAAW,uBAAMC,SAAUT,KAAKF,aAArB,UACT,0CAEE,uBAAOY,KAAK,OAAOhB,MAAOM,KAAKP,MAAMC,MAAOiB,SAAUX,KAAKJ,kBAE7D,uBAAOc,KAAK,SAAShB,MAAM,SAASkB,QAAWZ,KAAKF,aAAaD,KAAKG,WAExE,6BACGA,KAAKa,WAAWhB,KAAKG,e,GA7CZc,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.349c2181.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      recoms: [],\n    \n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(e) {\n    var data = require('./movie.json');\n    var recos = data[this.state.value][0]['recos'];\n    this.setState({recoms: recos});  \n    e.preventDefault();  \n  }\n\n  renderList(){\n    var recos = this.state.recoms;\n\n      recos.map((reco) =>{\n        return(\n        <li>{reco}</li>\n        );\n      });\n\n  }\n\n  render() {\n    return (\n      <div>      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" onClick = {this.handleSubmit.bind(this)}/>\n      </form>\n      <ul>\n        {this.renderList.bind(this)}\n      </ul>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}